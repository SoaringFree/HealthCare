<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context-4.2.xsd
	    http://www.springframework.org/schema/util 
	    http://www.springframework.org/schema/util/spring-util-4.2.xsd
	    http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	    http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd" >
	
	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<context:property-placeholder location="WEB-INF/config/jdbc.properties" />
	
	<!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 
	<context:component-scan base-package="com.politicalconstruction.controller"></context:component-scan>
	<context:component-scan base-package="com.politicalconstruction.service"></context:component-scan>-->
	<context:component-scan base-package="com.healthcare"></context:component-scan>
	
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
	</bean>
	
	<!-- 配置Jdbc模板 -->
    <bean id="jdbcTemplate" 
    	class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource" />
 
    <!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression=" execution(* com.healthcare.service..*(..))" />
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
			<!-- <tx:method name="*" read-only="true" /> -->
        </tx:attributes>
    </tx:advice>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven />
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 返回Json格式数据 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 返回页面数据 -->
	<bean id="stringHttpMessageConcerter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=utf-8</value>
				<value>text/html;charset=utf-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 访问静态资源 缓存1小时-->
	<mvc:resources location="/assets/" mapping="/assets/**" cache-period="3600" />
	<!-- <mvc:resources mapping="/upload/**" location="/upload/" ></mvc:resources> -->
	
	
	<!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->    
	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
	    <property name="caches">    
	        <set>  
	        	<!-- 缓存用户菜单 -->  
	            <bean name="emplMenuCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>    
	        </set>    
	    </property>    
	</bean> 

	
	<!-- 自定义登录拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.healthcare.common.SystemInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

 	
	<!-- 解析视图路径配置 -->
	<bean id="viewResolver" 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:order="100" p:viewClass="org.springframework.web.servlet.view.JstlView" 
		p:prefix="/WEB-INF/views/" p:suffix=".jsp" />
	 
	<!-- 通用文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
   </bean>
 	
</beans>